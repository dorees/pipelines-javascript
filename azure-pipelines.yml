# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

jobs:
- job: Build
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      node_10_x:
        node_version: 10.x
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js'

  - task: Npm@1
    displayName: 'Npm install'
    inputs:
      command: 'install'

- job: Test
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: Npm@1
    displayName: 'Npm test'
    inputs:
      command: 'custom'
      customCommand: 'run coverage'

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/TEST-RESULTS.xml'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

  - task: CopyFiles@2
    displayName: Package app
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: |
        **\*.js
        package.json
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: UniversalPackages@0
    displayName: Universal Publish
    inputs:
      command: publish
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      vstsFeedPublish: 'dna-dummy/dna-dummy-feed'
      vstsFeedPackagePublish: 'dna-dummy-node'
      packagePublishDescription: 'Zip containing node application'

- job: always
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo "The build has finished"
    condition: always()

- job: failed
  dependsOn:
  - Build 
  - Test
  condition: failed('Test')
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo "The build has failed"

- job: succeeded
  dependsOn:
  - Build
  - Test
  condition: succeeded('Test')
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo "The build has succeeded"
